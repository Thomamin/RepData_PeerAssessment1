install.packages("RMySQL")
library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
dataFile <- "household_power_consumption.txt"
data <- read.table(dataFile, sep=";", header=TRUE)
setwd("~/R study projects/ExData_Plotting1")
dataFile <- "household_power_consumption.txt"
data <- read.table(dataFile, sep=";", header=TRUE)
data <- read.table(dataFile, sep=";", header=TRUE, dec=".", na.strings ="?")
head(data)
as.numeric(data[2,3])
data2 <- subset(data, Date == "01/02/2007" | Date == "02/02/2007")
View(data2)
data2 <- subset(data, Date == as.date("01/02/2007") | Date == as.date("02/02/2007"))
data2 <- subset(data, Date == as.Date("01/02/2007") | Date == as.Date("02/02/2007"))
data2 <- subset(data, Date = as.Date("01/02/2007") | Date = as.Date("02/02/2007"))
days <- c("01/02/2007", "02/02/2007")
days2 <- as.Date(days)
data2 <- data[days2,]
head(data2)
data2 <- subset(data, Date in days)
data2 <- subset(data, Date == days2)
data2 <- subset(data, as.Date(Date) == days2)
View(data2)
View(data2)
hist(data2$Global_active_power, col = "red")
setwd("~/R study projects/RepData_PeerAssessment1")
activityData <- read.csv("activity.csv")
data <- ""
data2 <- ""
View(activityData)
activityData <- read.table("activity.csv")
head(activityData)
activityData2 <- activityData
activityData2[,steps] <- as.numeric(activityData[,steps])
activityData2[,steps] <- as.numeric(activityData[,"steps"])
activityData2[,"steps"] <- as.numeric(activityData[,"steps"])
View(activityData2)
sum(activityData[,"steps"])
sum(activityData2[,"steps"])
?sum
sum(activityData2[,"steps"], na.rm = TRUE)
sum(activityData[,"steps"], na.rm = TRUE)
?weekdays
weekdays(activityData[,"date"], abbreviate)
weekdays(as.date(activityData[1,"date"]), abbreviate)
weekdays(as.date(activityData[1,"date"],format=""), abbreviate)
weekdays(as.Date(activityData[1,"date"]), abbreviate)
weekdays(activityData[,"date"], abbreviate=FALSE)
as.Date(activityData[1,"date"])
as.Date(activityData[1,"date"])
?hist
hist(activityData[,"date"])
hist(activityData[,"stepa"])
hist(activityData[,"steps"])
?hist
hist(as.Date(activityData[,"date"]))
hist(as.Date(activityData[,"date"]), breaks=activityData[,"steps"])
hist(as.Date(activityData[,"date"]), breaks=1)
hist(activityData[,"steps"],break=as.Date(activityData[,"date"]))
hist(activityData[,"steps"],breaks=as.Date(activityData[,"date"]))
hist(activityData[,"steps"],breaks=as.Date(1))
hist(activityData[,"steps"],breaks=as.Date(hours=24))
hist(activityData[,"steps"],breaks=Day)
hist(activityData[,"steps"],xlab = "date")
hist(activityData[,"steps"])
hist(activityData[,"steps"],xlab = "date")
hist(activityData[,"steps"])
hist(sum(activityData[,"steps"]),breaks=activityData[,"date"])
sum(activityData[,"steps"])
hist(sum(activityData[,"steps"],rm=TRUE),breaks=activityData[,"date"])
hist(sum(activityData[,"steps"],na.rm=TRUE),breaks=activityData[,"date"])
hist(sum(activityData[,"steps"],na.rm=TRUE))
?tapplay
?tapply
subTotal <- tapply(activityData[,"steps"], activityData[,"date"], sum)
aggregate(cbind(steps) ~ date, data = activityData, FUN = sum, na.rm = TRUE)
hist(steps, date, data=dailyStep)
dailyStep <- aggregate(cbind(steps) ~ date, data = activityData, FUN = sum, na.rm = TRUE)
hist(steps, date, data=dailyStep)
View(dailyStep)
?hist
hist(dailyStep[,"steps"])
hist(dailyStep[,"date"])
hist(as.Date(dailyStep[,"date"]))
dailyStep <- aggregate(steps ~ date, data = activityData, FUN = sum, na.rm = TRUE)
View(dailyStep)
View(dailyStep)
View(dailyStep)
barplot(steps, date, data=dailyStep)
?barplot
barplot(dailyStep[,"steps"], names.arg=dailyStep[,"date"])
qplot(steps, data = dailyStep,geom="histogram")
library(ggplot2)
qplot(steps, data = dailyStep,geom="histogram")
library(ggplot2)
barplot(dailyStep[,"steps"], names.arg=dailyStep[,"date"])
setwd("~/R study projects/RepData_PeerAssessment1")
#1. Load the data
activityData <- read.csv("./activity.csv")
#2. Process/transform the data (if necessary) into a format suitable for your analysis
boxplot(steps,data=dailyStep, main="Steps a Day", xlab="aaa", ylab="Number of Steps")
?boxplot
boxplot(steps ~ date, data = dailyStep)
?mean
mean(steps)
mean(dailyStep[,"steps"])
median(dailyStep[,"steps"])
?timeplot
?time
?lines
lines(activityData[,"steps"], activityData[,"date"], type="l", lwd=1.5)
?plot
lines(activityData[,"steps"], activityData[,"date"], type="l", lwd=1.5)
?max
?range
xrange <- range(activityData[,"date"])
yrange <- range(activityDate[,"steps"])
plot(xrange, yrange, type="n", xlab="Date", ylab="Steps taken" )
xrange <- range(activityData[,"date"])
yrange <- range(activityData[,"steps"])
plot(xrange, yrange, type="n", xlab="Date", ylab="Steps taken" )
?distinct
?count
xrange <- count(activityData[,"date"])
yrange <- range(activityData[,"steps"])
plot(xrange, yrange, type="n", xlab="Date", ylab="Steps taken" )
?nrows
?n.rows
xrange <- nrow(activityData[,"date"])
yrange <- range(activityData[,"steps"])
plot(xrange, yrange, type="n", xlab="Date", ylab="Steps taken" )
?plot
View(activityData)
?as.ts
as.ts(activityData)
is.ts(activityData)
View(activityData)
intervalSteps <- aggregate(steps ~ interval, data = activityData, FUN = sum, na.rm = TRUE)
View(intervalSteps)
View(intervalSteps)
plot(intervalSteps[,"steps"], intervalSteps[,"interval"], type="n", xlab="interval", ylab="Steps taken" )
lines(intervalSteps[,"steps"], intervalSteps[,"interval"], type="l", lwd=1.5)
plot(intervalSteps[,"interval"],intervalSteps[,"steps"], type="n", xlab="interval", ylab="Steps taken" )
lines(intervalSteps[,"interval"],intervalSteps[,"steps"], type="l", lwd=1.5)
max(intervalSteps[,"steps"])
intervalSteps[ ,max(intervalSteps[,"steps"])]
intervalSteps[ ,==max(intervalSteps[,"steps"])]
which(intervalSteps == 10927)
which(intervalSteps == 10927)
intervalSteps[intervalSteps$steps == max(intervalSteps$steps), ]
?na
?countna
is.na(activityData)
count(is.na(activityData))
View(activityData)
activityData$steps[!is.na(activityData$steps)]
activityData$steps[is.na(activityData$steps)]
activityData$steps[is.na(activityData$steps),]
activityData$steps[,is.na(activityData$steps)]
activityData[is.na(activityData$steps)]
activityData$steps[,is.na(activityData$steps)]
activityData$steps[is.na(activityData$steps)]
activityData$steps[!is.na(activityData$steps)]
count.na(activityData$steps)
?count.na
length(activityData$steps[activityData$steps =="NA"])
summary(intervalSteps)
summary(dailySteps)
summary(dailyStep)
meanForNA <- mean(intervalStep[,"steps"])
meanForNA <- mean(intervalSteps[,"steps"])
if activityData$steps == "NA" { activityData$steps <- meanForNA}
if (activityData$steps == "NA") { activityData$steps <- meanForNA}
activityData2 <- activityData
for ( i in activityData2$steps) {
if is.na(activityData2$steps) {  activityData2[i,"steps"] <- meanForNA
}
}
activityData2 <- activityData
for ( i in nrow(activityData2$steps)) {
if is.na(activityData2$steps) {  activityData2[i,"steps"] <- meanForNA
}
}
